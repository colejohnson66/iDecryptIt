<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hexware.Plist</name>
    </assembly>
    <members>
        <member name="T:Hexware.Plist.IPlistElement">
            <summary>
            Base interface for manipulating Plist elements.
            </summary>
        </member>
        <member name="M:Hexware.Plist.IPlistElement.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.IPlistElement.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.IPlistElement`1">
            <summary>
            Interface for manipulating Plist elements.
            </summary>
            <typeparam name="TDotNetEquiv">The .NET equivalent of this Plist element.</typeparam>
        </member>
        <member name="M:Hexware.Plist.IPlistElement`1.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.IPlistElement`1.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement`1.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement`1.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement`1.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement`1.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.IPlistElement`1.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistDate">
            <summary>
            Represents a &lt;date /&gt; tag using a <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDate.#ctor(System.DateTime,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDate"/> constructor using a <see cref="T:System.DateTime"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDate.#ctor(System.String,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDate"/> constructor using a <see cref="T:System.String"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
            <exception cref="T:System.FormatException">Provided date is not in valid ISO 8601 standard.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDate.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDate.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDate.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="T:Hexware.Plist.PlistDate"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistDate.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDate.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDate.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistDate.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDate.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDate.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistFormatException">
            <summary>
            The error that is thrown when an error in the formatting of a Plist document is encountered.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistException">
            <summary>
            The exception that is thrown when an error in the Plist is encountered.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistException.#ctor">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with default parameters.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Hexware.Plist.PlistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the inner parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Hexware.Plist.PlistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Hexware.Plist.PlistFormatException.#ctor">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with default parameters.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Hexware.Plist.PlistFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the inner parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Hexware.Plist.PlistFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the Hexware.Audio.AudioFormatException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Hexware.Plist.PlistData">
            <summary>
            Represents a &lt;data /&gt; tag using a one-dimensional <see cref="T:System.Byte"/> array.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistData.#ctor(System.Byte[],System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistData"/> constructor using a one dimensional <see cref="T:System.Byte"/> array and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistData.#ctor(System.String,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistData"/> constructor using a base64 encoded <see cref="T:System.String"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> is not a valid base64 encoded string.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistData.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistData.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistData.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistData.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistData.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistData.Length">
            <summary>
            Gets the amount of characters in the decoded binary data.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistData.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistData.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistData.Path">
            <summary>
            Gets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistData.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistData.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistNull">
            <summary>
            Represents a &lt;null /&gt; tag
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistNull.#ctor(System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistNull constructor using a path
            </summary>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistNull.ReadBinary(System.IO.BinaryReader,System.Byte,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Read a binary Plist node into a .NET Plist element
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> that is responsible for deserializing the binary Plist.</param>
            <param name="firstbyte">The first byte of this element as it was extracted from the reader stream.</param>
            <param name="path">The path of this node.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <returns>The <see cref="T:Hexware.Plist.PlistNull"/> element from the binary stream.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistNull.WriteBinary">
            <summary>
            Write the Plist node to a <see cref="T:System.IO.BinaryWriter"/> for serializing the Plist as a Binary Plist
            </summary>
            <returns>An array of <see cref="T:System.Byte"/> that contains the data for this element.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistNull.ReadXml(System.Xml.XmlDocument,System.Int32,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Read an Xml Plist node into a .NET Plist element
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlDocument"/> that is responsible for deserialization.</param>
            <param name="index">The index of the element number of the <paramref name="reader"/> for this node.</param>
            <param name="path">The path of this node.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <returns>The <see cref="T:Hexware.Plist.PlistNull"/> element from the Xml stream.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistNull.WriteXml(System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Write the Plist node to an <see cref="T:System.Xml.XmlDocument"/> for serializing the Plist as an Xml Plist
            </summary>
            <param name="tree">The current node that the new element will be added to.</param>
            <param name="writer">A <see cref="T:System.Xml.XmlDocument"/> that is used to create <see cref="T:System.Xml.XmlNode"/>.</param>
            <returns>An <see cref="T:System.Xml.XmlElement"/> that contains the value of this element.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistNull.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode
            </summary>
            <returns>Containers return the amount inside while Primitives return the binary length.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistNull.Dispose">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistNull.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
            <param name="disposing"><c>true.</c> if called from .Dispose() or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistNull.Finalize">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistNull.Name">
            <summary>
            Gets the Xml tag for this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistNull.Path">
            <summary>
            Gets the path of this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistNull.Parent">
            <summary>
            Gets the parent of this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistNull.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistInteger">
            <summary>
            Represents a &lt;integer /&gt; tag using an <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.String,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.String"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.Double,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.Double"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.SByte,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.SByte"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.Byte,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.Byte"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parent is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.Int16,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.Int16"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.Int32,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.Int32"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.#ctor(System.Int64,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistInteger"/> constructor from an <see cref="T:System.Int64"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
            <returns>Containers return the amount inside while Primitives return the binary length.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistInteger.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistInteger.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistInteger.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistInteger.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistInteger.Path">
            <summary>
            Gets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistInteger.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistInteger.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistBool">
            <summary>
            Represents a &lt;true /&gt; or &lt;false /&gt; tag using a <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistBool.#ctor(System.Boolean,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistBool"/> constructor using a <see cref="T:System.Boolean"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistBool.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistBool.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistBool.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistBool.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistBool.Finalize">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistBool.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistBool.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistBool.Path">
            <summary>
            Gets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistBool.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistBool.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistString">
            <summary>
            Represents a &lt;string /&gt; tag using a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistString.#ctor(System.String,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistString constructor using a <see cref="T:System.String"/> and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistString.Contains(System.Char)">
            <summary>
            Checks whether <paramref name="chartocheck"/> is in the UTF-8 codepage.
            </summary>
            <param name="chartocheck">The character to check for.</param>
            <returns><c>true.</c> if <paramref name="chartocheck"/> is in the UTF-8 codepage, otherwise <c>false.</c>.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistString.GetPlistElementLength">
            <summary>
            Gets the amount of characters in the string.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistString.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistString.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistString.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistString.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistString.Finalize">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistString.UTF16">
            <summary>
            Gets a <see cref="T:System.Boolean"/> regarding whether or not the string contains UTF-16 characters.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistString.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistString.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistString.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistString.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistString.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistRoot">
            <summary>
            Represents a &lt;plist /&gt; tag using <see cref="T:Hexware.Plist.PlistDict"/>.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistRoot.#ctor(Hexware.Plist.PlistDict)">
            <summary>
            <see cref="T:Hexware.Plist.PlistRoot"/> constructor using a <see cref="T:Hexware.Plist.PlistDict"/>.
            </summary>
            <param name="value">The value of this node.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistRoot.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistRoot.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistRoot.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistRoot.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistRoot.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistRoot.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistRoot.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistRoot.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistRoot.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistRoot.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistFormat">
            <summary>
            Enumeration of Plist Formats.
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistFormat.Binary">
            <summary>
            Indicates that this is a binary Plist
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistFormat.Json">
            <summary>
            Indicates that this is a Json Plist
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistFormat.Xml">
            <summary>
            Indicates that this is an Xml Plist
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistDict">
            <summary>
            Represents a &lt;dict /&gt; tag using a <see cref="T:System.Collections.Generic.Dictionary`2"/>&lt;<see cref="T:System.String"/>, <see cref="T:Hexware.Plist.IPlistElement"/>&gt;.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDict.#ctor(System.Collections.Generic.Dictionary{System.String,Hexware.Plist.IPlistElement},System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDict"/> constructor using a <see cref="T:System.Collections.Generic.Dictionary`2"/>&lt;<see cref="T:System.String"/>, <see cref="T:Hexware.Plist.IPlistElement"/>&gt;.
            </summary>
            <param name="value">The value of this node containing <see cref="T:Hexware.Plist.IPlistElement"/>-based objects.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDict.#ctor(System.Xml.XmlNodeList,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDict"/> constructor using a <see cref="T:System.Xml.XmlNodeList"/> and a path.
            </summary>
            <param name="value">A <see cref="T:System.Xml.XmlNodeList"/> containing the current array.</param>
            <param name="path">The current path in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
            <exception cref="T:Hexware.Plist.PlistFormatException">A node is invalid.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Add(System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Adds an element to the dictionary.
            </summary>
            <param name="key">The key of the value to add.</param>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException">The provided key or value is null or empty.</exception>
            <exception cref="T:System.OverflowException">The array is too big.</exception>
            <exception cref="T:System.StackOverflowException">The stack is too small.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Delete(System.String)">
            <summary>
            Deletes an element from the array based on the index.
            </summary>
            <param name="key">A zero-based index of the element to delete.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <exception cref="T:System.MissingFieldException"><paramref name="key"/> does not exist.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Exists(System.String)">
            <summary>
            Determines if a provided key exists in the current dictionary.
            </summary>
            <param name="key">The key to check for.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <returns><c>true.</c> if the specified key exists; otherwise <c>false.</c>.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Get(System.String)">
            <summary>
            Retrieves an element from the array based on a key.
            </summary>
            <param name="key">The key of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="key"/> does not exist in the array.</exception>
            <returns>The value from the array.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Get(System.String,System.Boolean)">
            <summary>
            Retrieves an element from the array based on a key.
            </summary>
            <param name="key">The key of the element to retrieve.</param>
            <param name="throw">Whether to throw an exception of missing field or not.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="key"/> does not exist in the array.</exception>
            <returns>The value from the array or <c>null.</c> if <paramref name="key"/> does not exist.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Get``1(System.String)">
            <summary>
            Retrieves an element from the array based on a key.
            </summary>
            <typeparam name="T">The type to return of <see cref="T:Hexware.Plist.IPlistElement"/>.</typeparam>
            <param name="key">The key of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="key"/> does not exist in the array.</exception>
            <returns>The value from the array after casting.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Get``1(System.String,System.Boolean)">
            <summary>
            Retrieves an element from the array based on a key.
            </summary>
            <typeparam name="T">The type to return of <see cref="T:Hexware.Plist.IPlistElement"/>.</typeparam>
            <param name="key">The key of the element to retrieve.</param>
            <param name="throw">Whether to throw an exception of missing field or not.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null or empty.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="key"/> does not exist in the array.</exception>
            <returns>The value from the array after casting or <c>null.</c> if <paramref name="key"/> does not exist.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Parse(System.Xml.XmlNodeList)">
            <summary>
            Parses a <see cref="T:System.Xml.XmlNodeList"/> into an array.
            </summary>
            <param name="list">A list of nodes underneath this current node.</param>
        </member>
        <member name="M:Hexware.Plist.PlistDict.GetPlistElementLength">
            <summary>
            Gets the number of nodes underneath this element.
            </summary>
            <returns>Amount of elements inside.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
            <returns>Containers return the amount inside while Primitives return the binary length.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistDict.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistDict.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Keys">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection`1"/>&lt;<see cref="T:System.String"/>&gt; collection of the keys.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Values">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection`1"/>&lt;<see cref="T:Hexware.Plist.IPlistElement"/>&gt; collection of the values.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Item(System.String)">
            <summary>
            Gets or sets a value in this element.
            </summary>
            <param name="key">The key for the element to retrieve or set.</param>
            <exception cref="T:System.ArgumentNullException">A value is null.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="key"/> does not exist in the array.</exception>
            <returns>The value at the specified key.</returns>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <param name="value">The value of this node.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Path">
            <summary>
            Gets or sets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDict.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistNodeType">
            <summary>
            Enumeration of Plist Node Types
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Array">
            <summary>
            &lt;array /&gt; represents a zero-based array of <see cref="T:Hexware.Plist.IPlistElement"/>s
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Bool">
            <summary>
            &lt;true /&gt; or &lt;false /&gt; represents a <see cref="T:System.Boolean"/> value
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Data">
            <summary>
            &lt;data /&gt; represents a base64-encoded <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Date">
            <summary>
            &lt;array /&gt; represents a <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Dict">
            <summary>
            &lt;dict /&gt; represents a {KEY, VALUE} array of <see cref="T:Hexware.Plist.IPlistElement"/>s
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Fill">
            <summary>
            &lt;fill /&gt; represents a fill element
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Integer">
            <summary>
            &lt;integer /&gt; represents a 64-bit signed integer (<see cref="T:System.Int64"/>)
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Null">
            <summary>
            &lt;null /&gt; represents a <c>null.</c> value
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Plist">
            <summary>
            &lt;plist /&gt; represents the whole Plist document
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Real">
            <summary>
            &lt;real /&gt; represents a <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Set">
            <summary>
            TO BE IMPLEMENTED
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.String">
            <summary>
            &lt;string /&gt; represents a <see cref="T:System.String"/> encoded with UTF8 (ASCII)
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.Uid">
            <summary>
            &lt;uid /&gt; represents a <see cref="T:System.Byte"/> array with a maximum length of 16 (0x10)
            </summary>
        </member>
        <member name="F:Hexware.Plist.PlistNodeType.UString">
            <summary>
            &lt;ustring /&gt; represents a <see cref="T:System.String"/> encoded with UTF16 (Unicode)
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistFill">
            <summary>
            Represents a &lt;fill /&gt; tag.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistFill.#ctor(System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistFill"/> constructor using a path.
            </summary>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistFill.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode
            </summary>
            <returns>Containers return the amount inside while Primitives return the binary length.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistFill.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistFill.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistFill.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistFill.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistFill.Name">
            <summary>
            Gets the Xml tag for this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistFill.Path">
            <summary>
            Gets or sets the path of this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistFill.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistFill.Parent">
            <summary>
            Gets the parent of this element
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistUid">
            <summary>
            Represents a &lt;uid&gt; using a one-dimensional <see cref="T:System.Byte"/> array
            </summary>
            <remarks>UID is only found in Binary Plists, however Xml Plists are implemented.</remarks>
        </member>
        <member name="M:Hexware.Plist.PlistUid.#ctor(System.Byte[],System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistUid"/> constructor using a one dimensional <see cref="T:System.Byte"/> array and a path.
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:Hexware.Plist.PlistFormatException"><paramref name="value"/> is bigger than the allowed 16 byte length.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistUid.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistUid.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistUid.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistUid.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistUid.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistUid.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistUid.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <exception cref="T:Hexware.Plist.PlistFormatException"><paramref name="value"/> is bigger than the allowed 16 byte length.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistUid.Path">
            <summary>
            Gets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistUid.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistUid.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistReal">
            <summary>
            Represents a &lt;real /&gt; tag using a <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.String,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.FormatException"><paramref name="value"/> is not a real (<see cref="T:System.Double"/>).</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.Double,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.SByte,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.Byte,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.Int16,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.Int32,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.#ctor(System.Int64,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            Hexware.Plist.PlistReal constructor using a path
            </summary>
            <param name="value">The value of this node.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistReal.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode
            </summary>
            <returns>Containers return the amount inside while Primitives return the binary length.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistReal.Dispose">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistReal.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
            <param name="disposing"><c>true.</c> if called from .Dispose() or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistReal.Finalize">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistReal.Name">
            <summary>
            Gets the Xml tag for this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistReal.Value">
            <summary>
            Gets or sets the value of this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistReal.Path">
            <summary>
            Gets or sets the path of this element
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistReal.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistReal.Parent">
            <summary>
            Gets the parent of this element
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistDocument">
            <summary>
            Represents a Plist Document.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDocument.#ctor(System.String)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDocument"/> constructor from a file.
            </summary>
            <param name="plistPath">The File path.</param>
            <exception cref="T:Hexware.Plist.PlistFormatException">Binary and Json Plists have not been implemented yet.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="plistPath"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="plistPath"/> does not exist.</exception>
            <exception cref="T:System.IO.FileLoadException">Load Error.</exception>
            <exception cref="T:System.IO.IOException">Unable to load Plist.</exception>
            <exception cref="T:System.Xml.XmlException"><paramref name="plistPath"/> is not an Xml Plist.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDocument.#ctor(System.IO.Stream)">
            <summary>
            <see cref="T:Hexware.Plist.PlistDocument"/> constructor from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="plistStream">A <see cref="T:System.IO.Stream"/> to read the Plist from.</param>
            <exception cref="T:Hexware.Plist.PlistFormatException">Binary Plists have not been implemented yet.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="plistStream"/> is null.</exception>
            <exception cref="T:System.Xml.XmlException"><paramref name="plistStream"/> is not an Xml Plist.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistDocument.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistDocument.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistDocument.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistDocument.Finalize">
            <summary>
            Free up resources used on the system for garbage collector
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDocument.PlistPath">
            <summary>
            Gets the path of the Plist file.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistDocument.Document">
            <summary>
            Gets a <see cref="T:Hexware.Plist.PlistRoot"/> representation of the Plist data
            </summary>
        </member>
        <member name="T:Hexware.Plist.PlistArray">
            <summary>
            Represents a &lt;array /&gt; tag using a one dimensional <see cref="T:Hexware.Plist.IPlistElement"/> array.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistArray.#ctor(Hexware.Plist.IPlistElement[],System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistArray"/> constructor using a one dimensional <see cref="T:Hexware.Plist.IPlistElement"/> array and a path.
            </summary>
            <param name="value">The value of this node containing <see cref="T:Hexware.Plist.IPlistElement"/>-based objects.</param>
            <param name="path">The path of this node in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistArray.#ctor(System.Xml.XmlNodeList,System.String,Hexware.Plist.IPlistElement)">
            <summary>
            <see cref="T:Hexware.Plist.PlistArray"/> constructor using a <see cref="T:System.Xml.XmlNodeList"/> and a path.
            </summary>
            <param name="value">A <see cref="T:System.Xml.XmlNodeList"/> containing the current array.</param>
            <param name="path">The current path in the hierarchy.</param>
            <param name="parent">A reference to the parent element of this element.</param>
            <exception cref="T:Hexware.Plist.PlistFormatException">A node not a valid Plist Element.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Add(Hexware.Plist.IPlistElement)">
            <summary>
            Adds an element to the array.
            </summary>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException">The provided value is null.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Delete(System.Int32)">
            <summary>
            Deletes an element from the array based on the index.
            </summary>
            <param name="index">A zero-based index of the element to delete.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index"/> is negative.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of bounds of the array.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Get(System.Int32)">
            <summary>
            Retrieves an element from the array based on the index.
            </summary>
            <param name="index">A zero-based index of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index"/> is negative.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of bounds of the array.</exception>
            <returns>The value from the array.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Get``1(System.Int32)">
            <summary>
            Retrieves an element from the array based on the index.
            </summary>
            <typeparam name="T">The type to return of <see cref="T:Hexware.Plist.IPlistElement"/>.</typeparam>
            <param name="index">A zero-based index of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index"/> is negative.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of bounds of the array.</exception>
            <returns>The value from the array after casting.</returns>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Set(System.Int32,Hexware.Plist.IPlistElement)">
            <summary>
            Sets an existing element in the array with a new value.
            </summary>
            <param name="index">A zero-based index of the element to change.</param>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index"/> is negative.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of bounds of the array.</exception>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Parse(System.Xml.XmlNodeList)">
            <summary>
            Parses a <see cref="T:System.Xml.XmlNodeList"/> into an array.
            </summary>
            <param name="list">A list of nodes underneath this current node.</param>
        </member>
        <member name="M:Hexware.Plist.PlistArray.GetPlistElementBinaryLength">
            <summary>
            Gets the length of this element when written in binary mode.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Dispose">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Dispose(System.Boolean)">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
            <param name="disposing"><c>true.</c> if called from <see cref="M:Hexware.Plist.PlistArray.Dispose"/> or else <c>false.</c>.</param>
        </member>
        <member name="M:Hexware.Plist.PlistArray.Finalize">
            <summary>
            Free up resources used on the system for garbage collector.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Item(System.Int32)">
            <summary>
            Gets a value in the array.
            </summary>
            <param name="index">A zero-based index of the element to change.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of bounds of the array.</exception>
            <returns>The array element at <paramref name="index"/>.</returns>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Length">
            <summary>
            Gets the amount of elements inside this array.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Name">
            <summary>
            Gets the Xml tag for this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Value">
            <summary>
            Gets or sets the value of this element.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Path">
            <summary>
            Gets the path of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistArray.NodeType">
            <summary>
            Gets the type of this element.
            </summary>
        </member>
        <member name="P:Hexware.Plist.PlistArray.Parent">
            <summary>
            Gets the parent of this element.
            </summary>
        </member>
    </members>
</doc>
